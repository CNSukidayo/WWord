# 服务相关配置
server:
  servlet:
    encoding:
      charset: UTF-8
      force: true
      enabled: true
  tomcat:
    uri-encoding: UTF-8

# spring相关配置
spring:
  servlet:
    multipart:
      max-file-size: 128MB
      max-request-size: 128MB
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
    throw-exception-if-no-handler-found: true
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  web:
    resources:
      add-mappings: false
  # 数据库相关配置
  datasource:
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://192.168.230.128:3306/wword?serverTimezone=UTC}
    driver-class-name: com.mysql.cj.jdbc.Driver
  # redis相关配置
  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST}
      port: ${SPRING_DATA_REDIS_PORT}
      password: ${SPRING_DATA_REDIS_PASSWORD}
  # rabbitMQ相关配置
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST}
    port: ${SPRING_RABBITMQ_PORT}
    username: ${SPRING_RABBITMQ_USERNAME}
    password: ${SPRING_RABBITMQ_PASSWORD}
    publisher-confirm-type: CORRELATED
    publisher-returns: true
    listener:
      simple:
        prefetch: 1
        concurrency: 3
        acknowledge-mode: manual
  cloud:
    sentinel:
      transport:
        dashboard: ${SPRING_CLOUD_SENTINEL_TRANSPORT_DASHBOARD}
      datasource:
        nacosTemplate:
          nacos:
            server-addr: ${SPRING_CLOUD_SENTINEL_DATASOURCE_NACOSTEMPLATE_NACOS_SERVER_ADDR}
            username: ${SPRING_CLOUD_SENTINEL_DATASOURCE_NACOSTEMPLATE_NACOS_USERNAME}
            password: ${SPRING_CLOUD_SENTINEL_DATASOURCE_NACOSTEMPLATE_NACOS_PASSWORD}
            data-id: ${spring.application.name}-sentinel
            group-id: DEFAULT_GROUP
            data-type: json


# 日志相关配置
logging:
  file:
    path: ${LOGGING_FILE_PATH:${wword.resource-locations}logs/${spring.application.name:service-core}/}
  level:
    io.github.cnsukidayo: info

#mybatis-plus相关配置
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true
  type-aliases-package: io.github.cnsukidayo.wword.model.entity

# 分组API配置
springdoc:
  api-docs:
    groups:
      enabled: true
  group-configs:
    - group: core-front
      display-name: 业务模块-前端
      packages-to-scan:
        - io.github.cnsukidayo.wword.core.controller
    - group: core-cloud
      display-name: 业务模块-微服务
      packages-to-scan:
        - io.github.cnsukidayo.wword.core.api
knife4j:
  enable: true
  setting:
    language: zh_cn
  production: false

# 自定义配置
wword:
  resource-locations: ${WWORD_RESOURCE_LOCATIONS:~/wwordResources/}
  # oss相关配置
  oss:
    oss-type: local
    work-space-dir: ${WWORD_OSS_WORK_SPACE_DIR:${wword.resource-locations}}
    ali:
      endpoint: ${WWORD_OSS_ALI_ENDPOINT}
      access-key: ${WWORD_OSS_ALI_ACCESS_KEY}
      access-key-secret: ${WWORD_OSS_ALI_ACCESS_KEY_SECRET}
      bucket-name: ${WWORD_OSS_ALI_BUCKET_NAME}
    local:
      upload-dir: ${WWORD_OSS_LOCAL_UPLOAD_DIR:${wword.resource-locations}}